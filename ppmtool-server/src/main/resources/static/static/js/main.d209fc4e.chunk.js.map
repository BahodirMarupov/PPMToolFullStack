{"version":3,"sources":["utils/setJWToken.js","actions/securityActions.js","actions/types.js","components/layout/Header.js","actions/projectActions.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducers.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/projectBoard/projectTask/ProjectTask.js","actions/projectTaskActions.js","components/projectBoard/ProjectBoard.js","components/projectBoard/projectTask/AddProjectTask.js","components/projectBoard/projectTask/UpdateProjectTask.js","components/layout/Landing.js","components/userManagement/Login.js","components/userManagement/Register.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["setJWToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","type","payload","Header","props","window","location","href","signUpChecking","security","user","validToken","fullName","className","to","signInChecking","onClick","data-toggle","data-target","id","this","Component","connect","state","createProject","project","history","a","post","push","response","data","getProject","projectIdentifier","get","ProjectItem","deleteBtn","deleteProject","projectName","description","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","clearErrors","projects","map","element","key","allProjects","AddProject","onChange","e","setState","target","name","value","onSubmit","preventDefault","newProject","startDate","endDate","errors","errorIdentifier","newProps","placeholder","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","store","createStore","rootReducers","compose","applyMiddleware","UpdateProject","match","params","disabled","ProjectTask","deleteProjectTask","projectTask","priority","setBgColor","renderSwitch","summary","acceptanceCriteria","Axios","ProjectBoard","getBacklog","projectTasks","status","peojectSequense","sort","b","getContent","length","projectNotFound","role","AddProjectTask","newProjecTask","dueDate","addProjectTask","UpdateProjectTask","updateProjectTask","task_id","getProjectTask","patch","Landing","getSignUpIn","jwtToken","Login","newLogin","username","email","password","login","getError","invalid","LoginRequest","res","setItem","decoded","jwt_decode","Register","newUser","confirmPassword","createNewUser","Footer","Date","now","exp","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d209fc4e.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst setJWToken=token=>{\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"]=token;\r\n    }\r\n    else delete axios.defaults.headers.common[\"Authorization\"];\r\n} \r\n\r\n\r\nexport default setJWToken;","import axios from \"axios\";\r\nimport setJWToken from \"../utils/setJWToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createNewUser = (newUser,history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\",newUser);\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n        history.push(\"/login\");\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login=(LoginRequest)=>async dispatch=>{\r\n    try {\r\n        let res=await axios.post(\"/api/users/login\",LoginRequest);\r\n        let {token}=res.data;\r\n        // Set token to localstorage\r\n        localStorage.setItem(\"jwtToken\",token);\r\n        // Set token in header\r\n        setJWToken(token);\r\n        // decode token on React\r\n        const decoded=jwt_decode(token);\r\n        // Set current user\r\n        dispatch({\r\n            type:SET_CURRENT_USER,\r\n            payload:decoded\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=()=>dispatch=>{\r\n    setJWToken(false);\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n        type:SET_CURRENT_USER,\r\n        payload:{}\r\n    })\r\n}","export const GET_ERRORS=\"GET_ERRORS\"\r\nexport const GET_PROJECT=\"GET_PROJECT\"\r\nexport const GET_PROJECTS=\"GET_PROJECTS\"\r\nexport const DELETE_PROJECT=\"DELETE_PROJECT\"\r\n\r\nexport const GET_BACKLOG=\"GET_BACKLOG\"\r\nexport const GET_PROJECT_TASK=\"GET_PROJECT_TASK\"\r\nexport const DELETE_PROJECT_TASK=\"DELETE_PROJECT_TASK\"\r\n\r\nexport const SET_CURRENT_USER=\"SET_CURRENT_USER\"\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n\r\n  logout=()=>{\r\n    this.props.logout();\r\n    window.location.href=\"/\"\r\n  }\r\n\r\n  signUpChecking = (security) => {\r\n\r\n    const { user, validToken } = security\r\n    const fullName = user.fullName;\r\n\r\n    if (validToken) {\r\n      return (<Link className=\"nav-link\" to=\"/dashboard\">\r\n        <i className=\"fas fa-user-circle mr-1\"></i>\r\n        {fullName}\r\n      </Link>\r\n      )\r\n\r\n    }\r\n\r\n    else {\r\n      return (<Link className=\"nav-link \" to=\"/register\">\r\n        Sign Up\r\n      </Link>)\r\n    }\r\n  }\r\n\r\n  signInChecking = (security) => {\r\n\r\n    if (security.validToken) {\r\n      return (\r\n        <Link className=\"nav-link bg-red\" onClick={this.logout} to=\"logout\">\r\n          Logout\r\n        </Link>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Link className=\"nav-link\" to=\"/login\">\r\n        Login\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                {this.signUpChecking(this.props.security)}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {this.signInChecking(this.props.security)}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, DELETE_PROJECT, GET_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  let projects = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: projects.data\r\n  });\r\n};\r\n\r\nexport const deleteProject = (projectIdentifier) => async (dispatch) => {\r\n  if (window.confirm(`Are you sure to erase ${projectIdentifier} project?`)) {\r\n    await axios.delete(`/api/project/${projectIdentifier}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: projectIdentifier\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProject= (projectIdentifier)=>async (dispatch)=>{\r\n  let project=await axios.get(`/api/project/${projectIdentifier}`);\r\n  dispatch({\r\n    type:GET_PROJECT,\r\n    payload:project.data\r\n  });\r\n}\r\n\r\nexport const clearErrors=()=>async(dispatch)=>{\r\n  dispatch({\r\n    type: GET_ERRORS,\r\n    payload: {}\r\n  });\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  deleteBtn = () => {\r\n    this.props.deleteProject(this.props.project.projectIdentifier);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"card card-body bg-light mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-2\">\r\n                <span className=\"mx-auto\">\r\n                  {this.props.project.projectIdentifier}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-lg-6 col-md-4 col-8\">\r\n                <h3>{this.props.project.projectName}</h3>\r\n                <p>{this.props.project.description}</p>\r\n              </div>\r\n              <div className=\"col-md-4 d-none d-lg-block\">\r\n                <ul className=\"list-group\">\r\n                  <Link to={`/projectBoard/${this.props.project.projectIdentifier}`}>\r\n                    <li className=\"list-group-item board\">\r\n                      <i className=\"fa fa-flag-checkered pr-1\">\r\n                        {\" \"}\r\n                        Project Board{\" \"}\r\n                      </i>\r\n                    </li>\r\n                  </Link>\r\n                  <Link\r\n                    to={`/updateProject/${this.props.project.projectIdentifier}`}\r\n                  >\r\n                    <li className=\"list-group-item update\">\r\n                      <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                    </li>\r\n                  </Link>\r\n                  <a type=\"button\" onClick={this.deleteBtn}>\r\n                    <li className=\"list-group-item delete\">\r\n                      <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                    </li>\r\n                  </a>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-info btn-lg\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport CreateProjectButton from \"./project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProjects, clearErrors } from \"../actions/projectActions\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n    this.props.clearErrors();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"projects\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h1 className=\"display-4 text-center\">Projects</h1>\r\n                <br />\r\n                <CreateProjectButton />\r\n                <br />\r\n                <hr />\r\n                {this.props.projects.map((element) => (\r\n                  <ProjectItem\r\n                    project={element}\r\n                    key={element.projectIdentifier}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  projects: PropTypes.array.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.projects.allProjects,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects, clearErrors })(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\n\r\nclass AddProject extends Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n      errorIdentifier: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  };\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors });\r\n      this.setState({ errorIdentifier: this.state.projectIdentifier });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">\r\n                  Create Project\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`${\r\n                        this.state.errors.projectName &&\r\n                        this.state.projectName === \"\"\r\n                          ? \"form-control form-control-lg is-invalid\"\r\n                          : \"form-control form-control-lg\"\r\n                      }`}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      {this.state.errors.projectName}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`${\r\n                        this.state.errors.projectIdentifier &&\r\n                        this.state.projectIdentifier ===\r\n                          this.state.errorIdentifier\r\n                          ? \"form-control form-control-lg is-invalid\"\r\n                          : \"form-control form-control-lg\"\r\n                      }`}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      {this.state.errors.projectIdentifier}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={`${\r\n                        this.state.errors.description &&\r\n                        this.state.description === \"\"\r\n                          ? \"form-control form-control-lg is-invalid\"\r\n                          : \"form-control form-control-lg\"\r\n                      }`}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    <div className=\"invalid-feedback\">\r\n                      {this.state.errors.description}\r\n                    </div>\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.startDate}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.endDate}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: Proptypes.func.isRequired,\r\n  errors: Proptypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, DELETE_PROJECT, GET_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  allProjects: [],\r\n  project: {},\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_PROJECTS:\r\n      return { ...state, allProjects: payload };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        allProjects: state.allProjects.filter(\r\n          (project) => project.projectIdentifier !== payload\r\n        ),\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return { ...state, project: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_BACKLOG:\r\n      return { ...state, project_tasks: payload };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return { ...state, project_task: payload };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (e) => e.projectSequence !== payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CURRENT_USER } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                validToken: payload?true:false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducers from \"./projectReducers\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  projects: projectReducers,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n// const ReactReduxDevTools =\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nlet store;\r\n\r\n// if (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n//   store = createStore(\r\n//     rootReducers,\r\n//     initialState,\r\n//     compose(applyMiddleware(...middleware),\r\n//     ReactReduxDevTools)\r\n//   );\r\n// } else {\r\n  store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n// }\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: \"\",\r\n    };\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let newProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  };\r\n  componentDidMount() {\r\n    this.props.getProject(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors });\r\n    }\r\n    if (!this.state.errors) {\r\n      const {\r\n        id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        startDate,\r\n        endDate,\r\n      } = newProps.project;\r\n      this.setState({\r\n        id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        startDate,\r\n        endDate,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Edit Project</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`${\r\n                        this.state.errors.projectName &&\r\n                        this.state.projectName === \"\"\r\n                          ? \"form-control form-control-lg is-invalid\"\r\n                          : \"form-control form-control-lg\"\r\n                      }`}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      {this.state.errors.projectName}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg disabled\"\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      onChange={this.onChange}\r\n                      disabled\r\n                      value={this.state.projectIdentifier}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={`${\r\n                        this.state.errors.description &&\r\n                        this.state.description === \"\"\r\n                          ? \"form-control form-control-lg is-invalid\"\r\n                          : \"form-control form-control-lg\"\r\n                      }`}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.description}\r\n                    ></textarea>\r\n                    <div className=\"invalid-feedback\">\r\n                      {this.state.errors.description}\r\n                    </div>\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.startDate}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.endDate}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects.project,\r\n  errors: state.errors,\r\n});\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/projectTaskActions\";\r\n\r\nexport class ProjectTask extends Component {\r\n  deleteBtn = () => {\r\n    this.props.deleteProjectTask(\r\n      this.props.id,\r\n      this.props.projectTask.projectSequence\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let renderSwitch = (priority) => {\r\n      switch (priority) {\r\n        case 1:\r\n          return \"HIGH\";\r\n        case 2:\r\n          return \"MEDIUM\";\r\n        case 3:\r\n          return \"LOW\";\r\n  \r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    let setBgColor=(priority)=>{\r\nswitch (priority) {\r\n  case 1:\r\n    \r\n    return \"bg-danger card-header text-white\";\r\n  case 2:\r\n    \r\n    return \"bg-warning card-header text-white\";\r\n  case 3:\r\n    \r\n    return \"bg-info card-header text-white\";\r\n\r\n  default:\r\n    break;\r\n}\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"card mb-1\">\r\n          <div className={`${setBgColor(this.props.projectTask.priority)}`}>\r\n            ID: {this.props.projectTask.projectSequence} -- Priority:{\" \"}\r\n            {renderSwitch(this.props.projectTask.priority)}\r\n          </div>\r\n          <div className=\"card-body bg-light\">\r\n            <h5 className=\"card-title\">{this.props.projectTask.summary}</h5>\r\n            <p className=\"card-text text-truncate \">\r\n              {this.props.projectTask.acceptanceCriteria}\r\n            </p>\r\n            <Link\r\n              to={`/updateProjectTask/${this.props.id}/${this.props.projectTask.projectSequence}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              View / Update\r\n            </Link>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger ml-4\"\r\n              onClick={this.deleteBtn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import Axios from \"axios\";\r\nimport {\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (id, payload, history) => async (dispatch) => {\r\n  try {\r\n    await Axios.post(\"/api/backlog/\" + id, payload);\r\n    history.push(\"/projectBoard/\" + id);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  id,\r\n  projectSequence,\r\n  payload,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await Axios.patch(\"/api/backlog/\" + id + \"/\" + projectSequence, payload);\r\n    history.push(\"/projectBoard/\" + id);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (id) => async (dispatch) => {\r\n  try {\r\n    let projectTasks = await Axios.get(\"/api/backlog/\" + id);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: projectTasks.data,\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (id, projectSequence,history) => async (dispatch) => {\r\n  try {\r\n    let projectTask = await Axios.get(\r\n      \"/api/backlog/\" + id + \"/\" + projectSequence\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: projectTask.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\")\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (id, projectSequence) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure to erase project task \" + projectSequence + \" ?\"\r\n    )\r\n  ) {\r\n    await Axios.delete(\"/api/backlog/\" + id + \"/\" + projectSequence);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: projectSequence,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBacklog } from \"../../actions/projectTaskActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTask from \"./projectTask/ProjectTask\";\r\n\r\nclass ProjectBoard extends Component {\r\n  componentDidMount() {\r\n    this.props.getBacklog(this.props.match.params.id);\r\n  }\r\n\r\n  getBacklog = (projectTasks, id) => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-secondary text-white\">\r\n              <h3>TO DO</h3>\r\n            </div>\r\n            {projectTasks\r\n              .filter((element) => element.status === \"TO_DO\")\r\n              .map((element) => (\r\n                <ProjectTask\r\n                  key={element.peojectSequense}\r\n                  projectTask={element}\r\n                  id={id}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-primary text-white\">\r\n              <h3>In Progress</h3>\r\n            </div>\r\n            {projectTasks\r\n              .filter((element) => element.status === \"IN_PROGRESS\")\r\n              .map((element) => (\r\n                <ProjectTask\r\n                  key={element.peojectSequense}\r\n                  projectTask={element}\r\n                  id={id}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-success text-white\">\r\n              <h3>Done</h3>\r\n            </div>\r\n            {projectTasks\r\n              .filter((element) => element.status === \"DONE\")\r\n              .sort((a, b) => a.priority - b.priority)\r\n              .map((element) => (\r\n                <ProjectTask\r\n                  key={element.peojectSequense}\r\n                  projectTask={element}\r\n                  id={id}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  getContent = (errors, getBacklog, projectTasks) => {\r\n    if (projectTasks.length === 0) {\r\n      if (errors.projectNotFound) {\r\n        return (\r\n          <div\r\n            className=\"alert alert-danger text-danger text-center font-weight-bold\"\r\n            role=\"alert\"\r\n          >\r\n            {this.props.errors.projectNotFound}\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div\r\n            className=\"alert alert-info text-dark text-center font-weight-bold\"\r\n            role=\"alert\"\r\n          >\r\n            No project task on this board\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return getBacklog;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Link\r\n            to={`/addProjectTask/${this.props.match.params.id}`}\r\n            className=\"btn btn-primary mb-3\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n          </Link>\r\n          <br />\r\n          <hr />\r\n\r\n          <div className=\"container\">\r\n            {this.getContent(\r\n              this.props.errors,\r\n              this.getBacklog(\r\n                this.props.projectTasks,\r\n                this.props.match.params.id\r\n              ),\r\n              this.props.projectTasks\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  getBacklog: PropTypes.func.isRequired,\r\n  projectTasks: PropTypes.array.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projectTasks: state.backlog.project_tasks,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addProjectTask } from \"../../../actions/projectTaskActions\";\r\nimport { getProject } from \"../../../actions/projectActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      dueDate: \"\",\r\n      priority: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.getProject(this.props.match.params.id)\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let newProjecTask={\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      dueDate: this.state.dueDate,\r\n      priority: this.state.priority\r\n    }\r\n    this.props.addProjectTask(this.props.match.params.id,newProjecTask,this.props.history)\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentWillReceiveProps(newProps){\r\n    if (newProps.errors) {\r\n    this.setState({errors:newProps.errors})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"add-PBI\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <Link\r\n                  to={`/projectBoard/${this.props.match.params.id}`}\r\n                  className=\"btn btn-light\"\r\n                >\r\n                  Back to Project Board\r\n                </Link>\r\n                <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                <p className=\"lead text-center\">{this.props.project.projectName} {this.props.project.projectIdentifier}</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`${this.state.errors.summary&&this.state.summary===\"\"?\"form-control form-control-lg is-invalid\":\"form-control form-control-lg\"}`}\r\n                      name=\"summary\"\r\n                      placeholder=\"Project Task summary\"\r\n                      value={this.state.summary}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{this.state.errors.summary}</div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Acceptance Criteria\"\r\n                      name=\"acceptanceCriteria\"\r\n                      value={this.state.acceptanceCriteria}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                  </div>\r\n                  <h6>Due Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"dueDate\"\r\n                      value={this.state.dueDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"priority\"\r\n                      value={this.state.priority}\r\n                      onChange={this.onChange}\r\n                    >\r\n                      <option value={0}>Select Priority</option>\r\n                      <option value={1}>High</option>\r\n                      <option value={2}>Medium</option>\r\n                      <option value={3}>Low</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProject: PropTypes.func.isRequired,\r\n  project:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  project: state.projects.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask,getProject })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProject } from \"../../../actions/projectActions\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/projectTaskActions\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      dueDate: \"\",\r\n      priority: \"\",\r\n      status: \"\",\r\n      errors: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let newProjecTask = {\r\n      ...this.props.projectTask,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      dueDate: this.state.dueDate,\r\n      priority: this.state.priority,\r\n      status: this.state.status,\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.props.match.params.id,\r\n      this.props.match.params.task_id,\r\n      newProjecTask,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getProject(this.props.match.params.id);\r\n  }\r\n  componentWillMount() {\r\n    this.props.getProjectTask(\r\n      this.props.match.params.id,\r\n      this.props.match.params.task_id,\r\n      this.props.history\r\n    );\r\n  }\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors });\r\n    }\r\n    if (!this.state.errors) {\r\n      this.setState({\r\n        summary: newProps.projectTask.summary,\r\n        acceptanceCriteria: newProps.projectTask.acceptanceCriteria,\r\n        dueDate: newProps.projectTask.dueDate,\r\n        priority: newProps.projectTask.priority,\r\n        status: newProps.projectTask.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"add-PBI\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <Link\r\n                  to={`/projectBoard/${this.props.match.params.id}`}\r\n                  className=\"btn btn-light\"\r\n                >\r\n                  Back to Project Board\r\n                </Link>\r\n                <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                <p className=\"lead text-center\">\r\n                  {this.props.project.projectName}{\" \"}\r\n                  {this.props.project.projectIdentifier}\r\n                </p>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`${\r\n                        this.state.errors.summary && this.state.summary === \"\"\r\n                          ? \"form-control form-control-lg is-invalid\"\r\n                          : \"form-control form-control-lg\"\r\n                      }`}\r\n                      name=\"summary\"\r\n                      placeholder=\"Project Task summary\"\r\n                      value={this.state.summary}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      {this.state.errors.summary}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Acceptance Criteria\"\r\n                      name=\"acceptanceCriteria\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.acceptanceCriteria}\r\n                    ></textarea>\r\n                  </div>\r\n                  <h6>Due Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"dueDate\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.dueDate}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"priority\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.priority}\r\n                    >\r\n                      <option value={0}>Select Priority</option>\r\n                      <option value={1}>High</option>\r\n                      <option value={2}>Medium</option>\r\n                      <option value={3}>Low</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"status\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.status}\r\n                    >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"TO_DO\">TO DO</option>\r\n                      <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                      <option value=\"DONE\">DONE</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  projectTask: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  projectTask: state.backlog.project_task,\r\n  project: state.projects.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getProject,\r\n  getProjectTask,\r\n  updateProjectTask,\r\n})(UpdateProjectTask);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass Landing extends Component {\r\n\r\n    getSignUpIn = (token) => {\r\n        if (token) {\r\n            return (<div>\r\n            </div>)\r\n        }\r\n        return <div>\r\n            <Link className=\"btn btn-primary mr-2 btn-lg\" to=\"/register\">Sign Up</Link>\r\n            <Link className=\"btn-lg btn btn-secondary mr-2\" to=\"/login\">Login</Link>\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                            </p>\r\n                                <hr />\r\n                                {this.getSignUpIn(localStorage.jwtToken)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../actions/securityActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {},\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newLogin = {\r\n            username: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.login(newLogin);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n\r\n        if(newProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n\r\n        if (newProps.errors) {\r\n            this.setState({ errors: newProps.errors })\r\n        }\r\n    }\r\n\r\n    getError = (invalid) => {\r\n        if(invalid){\r\n            return (\r\n                <div className=\"pb-3 pt-3\">\r\n                    <div className=\"alert alert-danger text-center w-50 m-auto\" role=\"alert\">{invalid}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            {this.getError(this.state.errors.invalid)}\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={`${this.state.errors.username && this.state.email === \"\" ?\r\n                                        \"form-control form-control-lg is-invalid\" : \"form-control form-control-lg\"}`} placeholder=\"Email Address\" name=\"email\" value={this.state.email}\r\n                                        onChange={this.onChange} />\r\n                                    <div className=\"invalid-feedback\">{this.state.errors.username}</div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={`${this.state.errors.password && this.state.password === \"\" ?\r\n                                        \"form-control form-control-lg is-invalid\" : \"form-control form-control-lg\"}`} placeholder=\"Password\" name=\"password\" value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                    <div className=\"invalid-feedback\">{this.state.errors.password}</div>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors,\r\n    security:state.security\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createNewUser } from '../../actions/securityActions'\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {},\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.errors) {\r\n            this.setState({\r\n                errors: newProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let newUser = {\r\n            fullName: this.state.name,\r\n            username: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={`${this.state.errors.fullName && this.state.name === \"\" ?\r\n                                        \"form-control form-control-lg is-invalid\" : \"form-control form-control-lg\"}`} placeholder=\"Full name\" name=\"name\"\r\n                                        value={this.state.name} onChange={this.onChange} />\r\n                                    <div className=\"invalid-feedback\">{this.state.errors.fullName}</div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" className={`${this.state.errors.username&&this.state.email===\"\" ?\r\n                                        \"form-control form-control-lg is-invalid\" : \"form-control form-control-lg\"}`} placeholder=\"Email Address\" name=\"email\" value={this.state.email} onChange={this.onChange} />\r\n                                    <div className=\"invalid-feedback\">{this.state.errors.username}</div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={`${(this.state.errors.password&&this.state.password===\"\")||\r\n                                    (this.state.errors.password&&this.state.password.length<6)?\r\n                                        \"form-control form-control-lg is-invalid\" : \"form-control form-control-lg\"}`} placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.onChange} />\r\n                                    <div className=\"invalid-feedback\">{this.state.errors.password}</div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={`${this.state.errors.confirmPassword&&this.state.password!==this.state.confirmPassword?\r\n                                        \"form-control form-control-lg is-invalid\" : \"form-control form-control-lg\"}`} placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n                                    <div className=\"invalid-feedback\">{this.state.errors.confirmPassword}</div>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"page-footer font-small pt-4\">\r\n\r\n            <div className=\"container mb-1 pb-0\">\r\n\r\n                <ul className=\"list-unstyled list-inline text-center\">\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-dribbble mx-1\" href=\" https://telegram.me/bahodirmarupov\">\r\n                            <i className=\"fab fa-telegram\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-fb mx-1\" href=\"https://www.facebook.com/bahodir.marupov.7\">\r\n                            <i className=\"fab fa-facebook-f\"> </i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-gplus mx-1\" href=\"https://github.com/BahodirMarupov\">\r\n                            <i className=\"fab fa-github\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-li mx-1\" href=\"https://www.linkedin.com/in/bahodir-marupov/\">\r\n                            <i className=\"fab fa-linkedin-in\"> </i>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n            <div className=\"footer-copyright text-center py-3\">© 2020 Bahodir Marupov\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/projectBoard/projectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/projectBoard/projectTask/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/userManagement/Login\";\nimport Register from \"./components/userManagement/Register\";\nimport jwt_decode from 'jwt-decode'\nimport setJWToken from \"./utils/setJWToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport Footer from \"./components/layout/Footer\";\nimport 'react-app-polyfill/stable'\n\nconst token = localStorage.jwtToken;\n\nif (token) {\n  setJWToken(token);\n  const decoded = jwt_decode(token)\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded\n  })\n\n  const currentTime = Date.now() / 1000;\n\n  if (currentTime > decoded.exp) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/addProject\" component={AddProject} />\n          <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n          <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n          <Route exact path=\"/addProjectTask/:id/\" component={AddProjectTask} />\n          <Route exact path=\"/updateProjectTask/:id/:task_id\" component={UpdateProjectTask} />\n          <Footer/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}